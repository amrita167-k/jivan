import { streamText } from "ai"
import { createGoogleGenerativeAI } from "@ai-sdk/google"

// Allow streaming responses up to 30 seconds
export const maxDuration = 30

// Initialize Google AI with API key
const google = createGoogleGenerativeAI({
  apiKey: process.env.NEXT_PUBLIC_GEMINI_API_KEY || "",
})

const religionPrompts = {
  hindu: `рдЖрдк рдПрдХ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдЧреБрд░реБ рд╣реИрдВ рдЬреЛ рд╣рд┐рдВрджреВ рдзрд░реНрдо рдФрд░ рд╕рдВрд╕реНрдХреГрддрд┐ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рджреЗрддреЗ рд╣реИрдВред 
  рдЖрдк рд╣рд┐рдВрджреА рдореЗрдВ рдЬрд╡рд╛рдм рджреЗрддреЗ рд╣реИрдВ рдФрд░ рднрдЧрд╡рдж рдЧреАрддрд╛, рдЙрдкрдирд┐рд╖рдж, рдФрд░ рд╡реЗрджреЛрдВ рдХреЗ рдЬреНрдЮрд╛рди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рддреЗ рд╣реИрдВред 
  рдЖрдкрдХреЗ рдЙрддреНрддрд░ рд╢рд╛рдВрддрд┐рдкреВрд░реНрдг, рдкреНрд░реЗрд░рдгрд╛рджрд╛рдпрдХ рдФрд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╣реЛрддреЗ рд╣реИрдВред рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реНрдкрд╖реНрдЯ рдЙрддреНрддрд░ рджреЗрдВред`,

  muslim: `рдЖрдк рдПрдХ рдЗрд╕реНрд▓рд╛рдорд┐рдХ рд╡рд┐рджреНрд╡рд╛рди рд╣реИрдВ рдЬреЛ рдХреБрд░рд╛рди рдФрд░ рд╣рджреАрд╕ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рджреЗрддреЗ рд╣реИрдВред 
  рдЖрдк рд╣рд┐рдВрджреА рдореЗрдВ рдЬрд╡рд╛рдм рджреЗрддреЗ рд╣реИрдВ рдФрд░ рдЗрд╕реНрд▓рд╛рдореА рд╢рд┐рдХреНрд╖рд╛рдУрдВ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рд╕рд▓рд╛рд╣ рджреЗрддреЗ рд╣реИрдВред 
  рдЖрдкрдХреЗ рдЙрддреНрддрд░ рджрдпрд╛рд▓реБ, рдЬреНрдЮрд╛рдирдкреВрд░реНрдг рдФрд░ рд╢рд╛рдВрддрд┐рдкреВрд░реНрдг рд╣реЛрддреЗ рд╣реИрдВред рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реНрдкрд╖реНрдЯ рдЙрддреНрддрд░ рджреЗрдВред`,

  sikh: `рдЖрдк рдПрдХ рд╕рд┐рдЦ рдЧреБрд░реБ рд╣реИрдВ рдЬреЛ рдЧреБрд░реБ рдЧреНрд░рдВрде рд╕рд╛рд╣рд┐рдм рдФрд░ рдЧреБрд░реБрдУрдВ рдХреА рд╢рд┐рдХреНрд╖рд╛рдУрдВ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рджреЗрддреЗ рд╣реИрдВред 
  рдЖрдк рд╣рд┐рдВрджреА рдФрд░ рдкрдВрдЬрд╛рдмреА рдорд┐рд╢реНрд░рд┐рдд рднрд╛рд╖рд╛ рдореЗрдВ рдЬрд╡рд╛рдм рджреЗрддреЗ рд╣реИрдВред 
  рдЖрдкрдХреЗ рдЙрддреНрддрд░ рд╕реЗрд╡рд╛, рд╕рдорд╛рдирддрд╛ рдФрд░ рднрд╛рдИрдЪрд╛рд░реЗ рдкрд░ рдЖрдзрд╛рд░рд┐рдд рд╣реЛрддреЗ рд╣реИрдВред рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдФрд░ рд╕реНрдкрд╖реНрдЯ рдЙрддреНрддрд░ рджреЗрдВред`,

  christian: `You are a Christian spiritual guide who provides guidance based on the Bible and Christian teachings. 
  You respond in English with compassion, love, and wisdom. 
  Your answers are peaceful, encouraging, and based on Christian values of love, forgiveness, and faith. Keep responses concise and clear.`,
}

export async function POST(req: Request) {
  try {
    const { messages, religionContext } = await req.json()

    // Validate API key
    if (!process.env.NEXT_PUBLIC_GEMINI_API_KEY) {
      console.error("Missing GEMINI API KEY")
      return new Response(
        JSON.stringify({
          error: "API key not configured. Please set NEXT_PUBLIC_GEMINI_API_KEY",
        }),
        {
          status: 500,
          headers: { "Content-Type": "application/json" },
        },
      )
    }

    const systemPrompt = religionPrompts[religionContext as keyof typeof religionPrompts] || religionPrompts.hindu

    console.log("Processing chat request:", { religionContext, messageCount: messages.length })

    const result = streamText({
      model: google("gemini-1.5-flash"),
      system: systemPrompt,
      messages,
      temperature: 0.7,
      maxTokens: 300,
    })

    return result.toDataStreamResponse()
  } catch (error) {
    console.error("Chat API Error:", error)

    // Return a fallback response if API fails
    const fallbackResponses = {
      hindu: "ЁЯЩП рдХреНрд╖рдорд╛ рдХрд░реЗрдВ, рдЕрднреА рддрдХрдиреАрдХреА рд╕рдорд╕реНрдпрд╛ рд╣реИред рдХреГрдкрдпрд╛ рдереЛрдбрд╝реА рджреЗрд░ рдмрд╛рдж рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред реР рд╢рд╛рдВрддрд┐ред",
      muslim: "ЁЯд▓ рдорд╛рдл рдХрд░реЗрдВ, рдЕрднреА рддрдХрдиреАрдХреА рджрд┐рдХреНрдХрдд рд╣реИред рдХреГрдкрдпрд╛ рдмрд╛рдж рдореЗрдВ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВред рдЕрд▓реНрд▓рд╛рд╣ рдЖрдкрдХреЛ рд╢рд╛рдВрддрд┐ рджреЗред",
      sikh: "ЁЯЩП рдорд╛рдл рдХрд░рдирд╛ рдЬреА, рдЕрднреА рддрдХрдиреАрдХреА рд╕рдорд╕реНрдпрд╛ рд╣реИред рдереЛрдбрд╝реА рджреЗрд░ рдмрд╛рдж рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВред рд╡рд╛рд╣реЗрдЧреБрд░реБред",
      christian: "ЁЯЩП Sorry, there's a technical issue right now. Please try again later. God bless you.",
    }

    return new Response(
      JSON.stringify({
        error: "Service temporarily unavailable",
        fallback: fallbackResponses.hindu,
      }),
      {
        status: 500,
        headers: { "Content-Type": "application/json" },
      },
    )
  }
}
